
# This file contains all the configuration specifications for your system.
# You should not have to edit any other files in order to make GGI_TLM 

# 1. Name of fortran compiler. Try to use one that automatically links mpi eg mpif90.mpich2

FC=mpif90

# 2. MPI_INCLUDE :This is the path to the file mpif.h 

MPI_INCLUDE=/usr/include/mpich

# 3. Set the compilation flags. Three options are given below for the mpif90 compiler
#    These flags may be quite different for another compiler.
#    Here -J$(MOD_DIR) tells the compiler where to save fortran90 module files
#         -I$(MOD_DIR)  -I$(MPI_INCLUDE) tells the compiler to include the module directory and 
#                                        MPI directory in the search path
#         -fdefault-real-8 ensures that all reals are defined as real*8
#         -finit-real=nan -finit-integer=nan sets all integers and reals to NaN initially. 

# Compilation flags, Option 1. Here we compile with bounds check - slow but good for development testing...

#FLAGS= -D$(MODE) -D$(NGSPICE_MODE) -cpp -g -fbounds-check -finit-real=nan -finit-integer=nan -J$(MOD_DIR) -I$(MOD_DIR) -I$(MPI_INCLUDE) 

# Compilation flags, Option 2.  Compile without bounds check - faster...

#FLAGS= -D$(MODE) -D$(NGSPICE_MODE) -cpp  -finit-real=nan -finit-integer=nan -J$(MOD_DIR) -I$(MOD_DIR) -I$(MPI_INCLUDE) 

# Compilation flags, Option 3.  Compilation flags, Here we compile with optimisation - fastest

FLAGS= -D$(MODE) -D$(NGSPICE_MODE) -cpp -J$(MOD_DIR) -I$(MOD_DIR) -I$(MPI_INCLUDE) -O4



