# define frequency ranges and bandwidths
FMIN1="10.0"
FMAX1="250E3"
BW1="200.0"
NF1="1250"
FMIN2="250E3"
FMAX2="2E6"
BW2="2E3"
NF2="14875"

make

rm V.fft V.favg sub_segment_freq* sub_segment_time* GGI_TLM_post_process_in.txt input_signal_summary.dat square_wave_fourier_series.fout

if [ "$1" = "1" ] ; then

#111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111

NAME="TEST1_1Cycle_10H_0M_0N"

echo "20e3   # f0
1.0   # amplitude
2048  # nsamples per cycle
1     # number of cycles
10    # number of harmonics
0.0   # amplitude of 50Hz signal
0.0   # gaussian noise amplitude
${NAME}.dat
" > create_test_datasets_in.txt

create_test_datasets < create_test_datasets_in.txt

cp ${NAME}.dat input_signal.dat

echo "          58  POST PROCESSING OPTION: POST PROCESS TIME DOMAIN CONDUCTED EMISSIONS DATA
input_signal.dat
           0   # number of header lines in the file
           1   # time data column
           2   # Voltage data column
   1000000.0000000000        # scale factor for data (eg 1E6 for V to micro V
           0   # number of filters to apply
           1   # Number of sub-data segments of data to process
   5E-005   # period of each sub-segment
        2048   # number of samples in each sub-segment (this should be a power of 2)
   0.0000000000000000        # time period over which the samples are to be distributed or enter 0 for continuous subsets
           1   # pad factor (set to 1 for no padding, pad factor should be a power of two)
z # z to pad with zeros or p to create a periodic continuation of the sub-signal
           1   # number of sub-segments to plot (max 9)
r  # time domain window function (r=rectangular, h=Hann)
y  # subtract d.c. (y or n)
V.fft
           2  # number of frequency domain bands with specific detector bandwidths to output
V.favg
   ${FMIN1}       # minimum frequency for output
   ${FMAX1}       # maximum frequency for output
   ${NF1}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW1}       # detector bandwidth
   ${FMIN2}       # minimum frequency for output
   ${FMAX2}       # maximum frequency for output
   ${NF2}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW2}       # detector bandwidth
           0  POST PROCESSING OPTION: QUIT
" > GGI_TLM_post_process_in.txt

GGI_TLM_post_process < GGI_TLM_post_process_in.txt

echo "Test signal summary:
"
cat input_signal_summary.dat

elif [ "$1" = "1b" ] ; then
#1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b

NAME="TEST1b_1Cycle_10H_0M_0N_b"

echo "20e3   # f0
1.0   # amplitude
2000  # nsamples per cycle
1     # number of cycles
10    # number of harmonics
0.0   # amplitude of 50Hz signal
0.0   # gaussian noise amplitude
${NAME}.dat
" > create_test_datasets_in.txt

create_test_datasets < create_test_datasets_in.txt

cp ${NAME}.dat input_signal.dat

echo "          58  POST PROCESSING OPTION: POST PROCESS TIME DOMAIN CONDUCTED EMISSIONS DATA
input_signal.dat
           0   # number of header lines in the file
           1   # time data column
           2   # Voltage data column
   1000000.0000000000        # scale factor for data (eg 1E6 for V to micro V
           0   # number of filters to apply
           1   # Number of sub-data segments of data to process
   5E-005   # period of each sub-segment
        2048   # number of samples in each sub-segment (this should be a power of 2)
   0.0000000000000000        # time period over which the samples are to be distributed or enter 0 for continuous subsets
           1   # pad factor (set to 1 for no padding, pad factor should be a power of two)
z # z to pad with zeros or p to create a periodic continuation of the sub-signal
           1   # number of sub-segments to plot (max 9)
r  # time domain window function (r=rectangular, h=Hann)
y  # subtract d.c. (y or n)
V.fft
           2  # number of frequency domain bands with specific detector bandwidths to output
V.favg
   ${FMIN1}       # minimum frequency for output
   ${FMAX1}       # maximum frequency for output
   ${NF1}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW1}       # detector bandwidth
   ${FMIN2}       # minimum frequency for output
   ${FMAX2}       # maximum frequency for output
   ${NF2}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW2}       # detector bandwidth
           0  POST PROCESSING OPTION: QUIT
" > GGI_TLM_post_process_in.txt

GGI_TLM_post_process < GGI_TLM_post_process_in.txt

echo "Test signal summary:
"
cat input_signal_summary.dat

elif [ "$1" = "2" ] ; then
#222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222

NAME="TEST2_1000Cycles_10H_0M_0N"

echo "20e3   # f0
1.0   # amplitude
200   # nsamples per cycle
1000  # number of cycles
10    # number of harmonics
0.0   # amplitude of 50Hz signal
0.0   # gaussian noise amplitude
${NAME}.dat
" > create_test_datasets_in.txt

create_test_datasets < create_test_datasets_in.txt

cp ${NAME}.dat input_signal.dat

echo "          58  POST PROCESSING OPTION: POST PROCESS TIME DOMAIN CONDUCTED EMISSIONS DATA
input_signal.dat
           0   # number of header lines in the file
           1   # time data column
           2   # Voltage data column
   1000000.0000000000        # scale factor for data (eg 1E6 for V to micro V
           0   # number of filters to apply
           1   # Number of sub-data segments of data to process
      5E-3     # period of each sub-segment: 5e-3 allows a minimum bandwidth of 200Hz
      262144   # number of samples in each sub-segment (this should be a power of 2)
   0.0000000000000000        # time period over which the samples are to be distributed or enter 0 for continuous subsets
           1   # pad factor (set to 1 for no padding, pad factor should be a power of two)
z # z to pad with zeros or p to create a periodic continuation of the sub-signal
           1   # number of sub-segments to plot (max 9)
r  # time domain window function (r=rectangular, h=Hann)
y  # subtract d.c. (y or n)
V.fft
           2  # number of frequency domain bands with specific detector bandwidths to output
V.favg
   ${FMIN1}       # minimum frequency for output
   ${FMAX1}       # maximum frequency for output
   ${NF1}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW1}       # detector bandwidth
   ${FMIN2}       # minimum frequency for output
   ${FMAX2}       # maximum frequency for output
   ${NF2}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW2}       # detector bandwidth
           0  POST PROCESSING OPTION: QUIT
" > GGI_TLM_post_process_in.txt

GGI_TLM_post_process < GGI_TLM_post_process_in.txt

echo "Test signal summary:
"
cat input_signal_summary.dat

elif [ "$1" = "3" ] ; then
#33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333

NAME="TEST3_1000Cycles_10H_1M_0N"

echo "20e3   # f0
1.0   # amplitude
200   # nsamples per cycle
1000  # number of cycles
10    # number of harmonics
1.0   # amplitude of 50Hz signal
0.0   # gaussian noise amplitude
${NAME}.dat
" > create_test_datasets_in.txt

create_test_datasets < create_test_datasets_in.txt

cp ${NAME}.dat input_signal.dat

echo "          58  POST PROCESSING OPTION: POST PROCESS TIME DOMAIN CONDUCTED EMISSIONS DATA
input_signal.dat
           0   # number of header lines in the file
           1   # time data column
           2   # Voltage data column
   1000000.0000000000        # scale factor for data (eg 1E6 for V to micro V
           1   # number of filters to apply
H  # filter type (LPF or HPF)
           4   # filter order
   100.0000000000000        # filter cutoff frequency
           1   # Number of sub-data segments of data to process
   5E-3   # period of each sub-segment: 5e-3 allows a minimum bandwidth of 200Hz
      262144   # number of samples in each sub-segment (this should be a power of 2)
   0.0000000000000000        # time period over which the samples are to be distributed or enter 0 for continuous subsets
           1   # pad factor (set to 1 for no padding, pad factor should be a power of two)
z # z to pad with zeros or p to create a periodic continuation of the sub-signal
           1   # number of sub-segments to plot (max 9)
r  # time domain window function (r=rectangular, h=Hann)
y  # subtract d.c. (y or n)
V.fft
           2  # number of frequency domain bands with specific detector bandwidths to output
V.favg
   ${FMIN1}       # minimum frequency for output
   ${FMAX1}       # maximum frequency for output
   ${NF1}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW1}       # detector bandwidth
   ${FMIN2}       # minimum frequency for output
   ${FMAX2}       # maximum frequency for output
   ${NF2}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW2}       # detector bandwidth
           0  POST PROCESSING OPTION: QUIT
" > GGI_TLM_post_process_in.txt

GGI_TLM_post_process < GGI_TLM_post_process_in.txt

echo "Test signal summary:
"
cat input_signal_summary.dat

elif [ "$1" = "3b" ] ; then
#3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3b3

NAME="TEST3b_1000Cycles_10H_1M_0N_B"

echo "20e3   # f0
1.0   # amplitude
200   # nsamples per cycle
1000  # number of cycles
10    # number of harmonics
1.0   # amplitude of 50Hz signal
0.0   # gaussian noise amplitude
${NAME}.dat
" > create_test_datasets_in.txt

create_test_datasets < create_test_datasets_in.txt

cp ${NAME}.dat input_signal.dat

echo "          58  POST PROCESSING OPTION: POST PROCESS TIME DOMAIN CONDUCTED EMISSIONS DATA
input_signal.dat
           0   # number of header lines in the file
           1   # time data column
           2   # Voltage data column
   1000000.0000000000        # scale factor for data (eg 1E6 for V to micro V
           0   # number of filters to apply
           1   # Number of sub-data segments of data to process
   5E-3   # period of each sub-segment: 5e-3 allows a minimum bandwidth of 200Hz
      262144   # number of samples in each sub-segment (this should be a power of 2)
   0.0000000000000000        # time period over which the samples are to be distributed or enter 0 for continuous subsets
           1   # pad factor (set to 1 for no padding, pad factor should be a power of two)
z # z to pad with zeros or p to create a periodic continuation of the sub-signal
           1   # number of sub-segments to plot (max 9)
r  # time domain window function (r=rectangular, h=Hann)
y  # subtract d.c. (y or n)
V.fft
           2  # number of frequency domain bands with specific detector bandwidths to output
V.favg
   ${FMIN1}       # minimum frequency for output
   ${FMAX1}       # maximum frequency for output
   ${NF1}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW1}       # detector bandwidth
   ${FMIN2}       # minimum frequency for output
   ${FMAX2}       # maximum frequency for output
   ${NF2}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW2}       # detector bandwidth
           0  POST PROCESSING OPTION: QUIT
" > GGI_TLM_post_process_in.txt

GGI_TLM_post_process < GGI_TLM_post_process_in.txt

echo "Test signal summary:
"
cat input_signal_summary.dat

elif [ "$1" = "4" ] ; then
#4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444

NAME="TEST4_1Cycle_10H_0M_0N_zero_pad"

echo "20e3   # f0
1.0   # amplitude
2048  # nsamples per cycle
1     # number of cycles
10    # number of harmonics
0.0   # amplitude of 50Hz signal
0.0   # gaussian noise amplitude
${NAME}.dat
" > create_test_datasets_in.txt

create_test_datasets < create_test_datasets_in.txt

cp ${NAME}.dat input_signal.dat

echo "          58  POST PROCESSING OPTION: POST PROCESS TIME DOMAIN CONDUCTED EMISSIONS DATA
input_signal.dat
           0   # number of header lines in the file
           1   # time data column
           2   # Voltage data column
   1000000.0000000000        # scale factor for data (eg 1E6 for V to micro V
           0   # number of filters to apply
           1   # Number of sub-data segments of data to process
   5E-5   # period of each sub-segment: 5e-3 allows a minimum bandwidth of 200Hz
        2048   # number of samples in each sub-segment (this should be a power of 2)
   0.0000000000000000        # time period over which the samples are to be distributed or enter 0 for continuous subsets
           128 # pad factor (set to 1 for no padding, pad factor should be a power of two)
z # z to pad with zeros or p to create a periodic continuation of the sub-signal
           1   # number of sub-segments to plot (max 9)
r  # time domain window function (r=rectangular, h=Hann)
y  # subtract d.c. (y or n)
V.fft
           2  # number of frequency domain bands with specific detector bandwidths to output
V.favg
   ${FMIN1}       # minimum frequency for output
   ${FMAX1}       # maximum frequency for output
   ${NF1}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW1}       # detector bandwidth
   ${FMIN2}       # minimum frequency for output
   ${FMAX2}       # maximum frequency for output
   ${NF2}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW2}       # detector bandwidth
           0  POST PROCESSING OPTION: QUIT
" > GGI_TLM_post_process_in.txt

GGI_TLM_post_process < GGI_TLM_post_process_in.txt

echo "Test signal summary:
"
cat input_signal_summary.dat

elif [ "$1" = "5" ] ; then
#555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555

NAME="TEST5_1Cycle_10H_0M_0N_periodic_extn"

echo "20e3   # f0
1.0   # amplitude
2048  # nsamples per cycle
1     # number of cycles
10    # number of harmonics
0.0   # amplitude of 50Hz signal
0.0   # gaussian noise amplitude
${NAME}.dat
" > create_test_datasets_in.txt

create_test_datasets < create_test_datasets_in.txt

cp ${NAME}.dat input_signal.dat

echo "          58  POST PROCESSING OPTION: POST PROCESS TIME DOMAIN CONDUCTED EMISSIONS DATA
input_signal.dat
           0   # number of header lines in the file
           1   # time data column
           2   # Voltage data column
   1000000.0000000000        # scale factor for data (eg 1E6 for V to micro V
           0   # number of filters to apply
           1   # Number of sub-data segments of data to process
   5E-5   # period of each sub-segment: 5e-3 allows a minimum bandwidth of 200Hz
        2048   # number of samples in each sub-segment (this should be a power of 2)
   0.0000000000000000        # time period over which the samples are to be distributed or enter 0 for continuous subsets
           128 # pad factor (set to 1 for no padding, pad factor should be a power of two)
p # z to pad with zeros or p to create a periodic continuation of the sub-signal
           1   # number of sub-segments to plot (max 9)
r  # time domain window function (r=rectangular, h=Hann)
y  # subtract d.c. (y or n)
V.fft
           2  # number of frequency domain bands with specific detector bandwidths to output
V.favg
   ${FMIN1}       # minimum frequency for output
   ${FMAX1}       # maximum frequency for output
   ${NF1}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW1}       # detector bandwidth
   ${FMIN2}       # minimum frequency for output
   ${FMAX2}       # maximum frequency for output
   ${NF2}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW2}       # detector bandwidth
           0  POST PROCESSING OPTION: QUIT
" > GGI_TLM_post_process_in.txt

GGI_TLM_post_process < GGI_TLM_post_process_in.txt

echo "Test signal summary:
"
cat input_signal_summary.dat

elif [ "$1" = "6" ] ; then
#666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666

NAME="TEST6_128Cycles_10H_0M_500mN"

echo "20e3   # f0
1.0   # amplitude
2048  # nsamples per cycle
128   # number of cycles
10    # number of harmonics
0.0   # amplitude of 50Hz signal
0.5   # gaussian noise amplitude
${NAME}.dat
" > create_test_datasets_in.txt

create_test_datasets < create_test_datasets_in.txt

cp ${NAME}.dat input_signal.dat

echo "          58  POST PROCESSING OPTION: POST PROCESS TIME DOMAIN CONDUCTED EMISSIONS DATA
input_signal.dat
           0   # number of header lines in the file
           1   # time data column
           2   # Voltage data column
   1000000.0000000000        # scale factor for data (eg 1E6 for V to micro V
           0   # number of filters to apply
           1   # Number of sub-data segments of data to process
   6.4E-3        # period of each sub-segment: 5e-3 allows a minimum bandwidth of 200Hz
      262144   # number of samples in each sub-segment (this should be a power of 2)
   0.0000000000000000        # time period over which the samples are to be distributed or enter 0 for continuous subsets
           1   # pad factor (set to 1 for no padding, pad factor should be a power of two)
z # z to pad with zeros or p to create a periodic continuation of the sub-signal
           1   # number of sub-segments to plot (max 9)
r  # time domain window function (r=rectangular, h=Hann)
y  # subtract d.c. (y or n)
V.fft
           2  # number of frequency domain bands with specific detector bandwidths to output
V.favg
   ${FMIN1}       # minimum frequency for output
   ${FMAX1}       # maximum frequency for output
   ${NF1}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW1}       # detector bandwidth
   ${FMIN2}       # minimum frequency for output
   ${FMAX2}       # maximum frequency for output
   ${NF2}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW2}       # detector bandwidth
           0  POST PROCESSING OPTION: QUIT
" > GGI_TLM_post_process_in.txt

GGI_TLM_post_process < GGI_TLM_post_process_in.txt

echo "Test signal summary:
"
cat input_signal_summary.dat

elif [ "$1" = "6b" ] ; then
#6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b

NAME="TEST6b_128Cycles_10H_0M_500mN_b"

echo "20e3   # f0
1.0   # amplitude
2048  # nsamples per cycle
128   # number of cycles
10    # number of harmonics
0.0   # amplitude of 50Hz signal
0.5   # gaussian noise amplitude
${NAME}.dat
" > create_test_datasets_in.txt

create_test_datasets < create_test_datasets_in.txt

cp ${NAME}.dat input_signal.dat

echo "          58  POST PROCESSING OPTION: POST PROCESS TIME DOMAIN CONDUCTED EMISSIONS DATA
input_signal.dat
           0   # number of header lines in the file
           1   # time data column
           2   # Voltage data column
   1000000.0000000000        # scale factor for data (eg 1E6 for V to micro V
           0   # number of filters to apply
           1   # Number of sub-data segments of data to process
   5E-3        # period of each sub-segment: 5e-3 allows a minimum bandwidth of 200Hz
      262144   # number of samples in each sub-segment (this should be a power of 2)
   0.0000000000000000        # time period over which the samples are to be distributed or enter 0 for continuous subsets
           1   # pad factor (set to 1 for no padding, pad factor should be a power of two)
z # z to pad with zeros or p to create a periodic continuation of the sub-signal
           1   # number of sub-segments to plot (max 9)
r  # time domain window function (r=rectangular, h=Hann)
y  # subtract d.c. (y or n)
V.fft
           2  # number of frequency domain bands with specific detector bandwidths to output
V.favg
   ${FMIN1}       # minimum frequency for output
   ${FMAX1}       # maximum frequency for output
   ${NF1}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW1}       # detector bandwidth
   ${FMIN2}       # minimum frequency for output
   ${FMAX2}       # maximum frequency for output
   ${NF2}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW2}       # detector bandwidth
           0  POST PROCESSING OPTION: QUIT
" > GGI_TLM_post_process_in.txt

GGI_TLM_post_process < GGI_TLM_post_process_in.txt

echo "Test signal summary:
"
cat input_signal_summary.dat

elif [ "$1" = "7" ] ; then
#77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777

NAME="TEST7_10001Cycles_10H_0M_500mN_ave100"

echo "20e3   # f0
1.0   # amplitude
200   # nsamples per cycle
10001 # number of cycles
10    # number of harmonics
0.0   # amplitude of 50Hz signal
0.5   # gaussian noise amplitude
${NAME}.dat
" > create_test_datasets_in.txt

create_test_datasets < create_test_datasets_in.txt

cp ${NAME}.dat input_signal.dat

echo "          58  POST PROCESSING OPTION: POST PROCESS TIME DOMAIN CONDUCTED EMISSIONS DATA
input_signal.dat
           0   # number of header lines in the file
           1   # time data column
           2   # Voltage data column
   1000000.0000000000        # scale factor for data (eg 1E6 for V to micro V
           0   # number of filters to apply
           100 # Number of sub-data segments of data to process
   5E-3        # period of each sub-segment: 5e-3 allows a minimum bandwidth of 200Hz
      262144   # number of samples in each sub-segment (this should be a power of 2)
   5e-1        # time period over which the samples are to be distributed or enter 0 for continuous subsets
           1   # pad factor (set to 1 for no padding, pad factor should be a power of two)
z # z to pad with zeros or p to create a periodic continuation of the sub-signal
           4   # number of sub-segments to plot (max 9)
r  # time domain window function (r=rectangular, h=Hann)
y  # subtract d.c. (y or n)
V.fft
           2  # number of frequency domain bands with specific detector bandwidths to output
V.favg
   ${FMIN1}       # minimum frequency for output
   ${FMAX1}       # maximum frequency for output
   ${NF1}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW1}       # detector bandwidth
   ${FMIN2}       # minimum frequency for output
   ${FMAX2}       # maximum frequency for output
   ${NF2}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW2}       # detector bandwidth
           0  POST PROCESSING OPTION: QUIT
" > GGI_TLM_post_process_in.txt

GGI_TLM_post_process < GGI_TLM_post_process_in.txt

echo "Test signal summary:
"
cat input_signal_summary.dat

elif [ "$1" = "7b" ] ; then
#7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b7b

NAME="TEST7b_1001Cycles_10H_0M_500mN_ave1"

echo "20e3   # f0
1.0   # amplitude
200   # nsamples per cycle
1001  # number of cycles
10    # number of harmonics
0.0   # amplitude of 50Hz signal
0.5   # gaussian noise amplitude
${NAME}.dat
" > create_test_datasets_in.txt

create_test_datasets < create_test_datasets_in.txt

cp ${NAME}.dat input_signal.dat

echo "          58  POST PROCESSING OPTION: POST PROCESS TIME DOMAIN CONDUCTED EMISSIONS DATA
input_signal.dat
           0   # number of header lines in the file
           1   # time data column
           2   # Voltage data column
   1000000.0000000000        # scale factor for data (eg 1E6 for V to micro V
           0   # number of filters to apply
           1   # Number of sub-data segments of data to process
   5E-3        # period of each sub-segment: 5e-3 allows a minimum bandwidth of 200Hz
      262144   # number of samples in each sub-segment (this should be a power of 2)
   5e-3        # time period over which the samples are to be distributed or enter 0 for continuous subsets
           1   # pad factor (set to 1 for no padding, pad factor should be a power of two)
z # z to pad with zeros or p to create a periodic continuation of the sub-signal
           1   # number of sub-segments to plot (max 9)
r  # time domain window function (r=rectangular, h=Hann)
y  # subtract d.c. (y or n)
V.fft
           2  # number of frequency domain bands with specific detector bandwidths to output
V.favg
   ${FMIN1}       # minimum frequency for output
   ${FMAX1}       # maximum frequency for output
   ${NF1}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW1}       # detector bandwidth
   ${FMIN2}       # minimum frequency for output
   ${FMAX2}       # maximum frequency for output
   ${NF2}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW2}       # detector bandwidth
           0  POST PROCESSING OPTION: QUIT
" > GGI_TLM_post_process_in.txt

GGI_TLM_post_process < GGI_TLM_post_process_in.txt

echo "Test signal summary:
"
cat input_signal_summary.dat

elif [ "$1" = "meas" ] ; then
#MEASURED_DATA_MEASURED_DATA_MEASURED_DATA_MEASURED_DATA_MEASURED_DATA_MEASURED_DATA_

NAME="TEST_MEAS1_AVG_10"

cp measured_data.out input_signal.dat

FMIN1="10.0"
FMAX1="250E3"
BW1="200.0"
NF1="1250"

echo "          58  POST PROCESSING OPTION: POST PROCESS TIME DOMAIN CONDUCTED EMISSIONS DATA
measured_data.out
           0   # number of header lines in the file
           1   # time data column
           2   # Voltage data column
   1000000.0000000000        # scale factor for data (eg 1E6 for V to micro V
           0   # number of filters to apply
           10  # Number of sub-data segments of data to process
   0.01        # period of each sub-segment: 5e-3 allows a minimum bandwidth of 200Hz
      262144   # number of samples in each sub-segment (this should be a power of 2)
   0.10        # time period over which the samples are to be distributed or enter 0 for continuous subsets
           1   # pad factor (set to 1 for no padding, pad factor should be a power of two)
z # z to pad with zeros or p to create a periodic continuation of the sub-signal
           1   # number of sub-segments to plot (max 9)
r  # time domain window function (r=rectangular, h=Hann)
y  # subtract d.c. (y or n)
V.fft
           1  # number of frequency domain bands with specific detector bandwidths to output
V.favg
   ${FMIN1}       # minimum frequency for output
   ${FMAX1}       # maximum frequency for output
   ${NF1}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW1}       # detector bandwidth
           0  POST PROCESSING OPTION: QUIT
" > GGI_TLM_post_process_in.txt

GGI_TLM_post_process < GGI_TLM_post_process_in.txt

echo "Test signal summary:
"
cat input_signal_summary.dat

elif [ "$1" = "meas2" ] ; then
#MEASURED_DATA_MEASURED_DATA_MEASURED_DATA_MEASURED_DATA_MEASURED_DATA_MEASURED_DATA_

NAME="TEST_MEAS2"

cp measured_data.out input_signal.dat

FMIN1="10.0"
FMAX1="250E3"
BW1="200.0"
NF1="1250"

echo "          58  POST PROCESSING OPTION: POST PROCESS TIME DOMAIN CONDUCTED EMISSIONS DATA
measured_data.out
           0   # number of header lines in the file
           1   # time data column
           2   # Voltage data column
   1000000.0000000000        # scale factor for data (eg 1E6 for V to micro V
           0   # number of filters to apply
           1   # Number of sub-data segments of data to process
   0.1         # period of each sub-segment: 5e-3 allows a minimum bandwidth of 200Hz
      262144   # number of samples in each sub-segment (this should be a power of 2)
   0.1         # time period over which the samples are to be distributed or enter 0 for continuous subsets
           1   # pad factor (set to 1 for no padding, pad factor should be a power of two)
z # z to pad with zeros or p to create a periodic continuation of the sub-signal
           1   # number of sub-segments to plot (max 9)
r  # time domain window function (r=rectangular, h=Hann)
y  # subtract d.c. (y or n)
V.fft
           1  # number of frequency domain bands with specific detector bandwidths to output
V.favg
   ${FMIN1}       # minimum frequency for output
   ${FMAX1}       # maximum frequency for output
   ${NF1}         # number of frequencies for output
r                 # detector frequency domain function (gaussian or rectangular)
   ${BW1}       # detector bandwidth
           0  POST PROCESSING OPTION: QUIT
" > GGI_TLM_post_process_in.txt

GGI_TLM_post_process < GGI_TLM_post_process_in.txt

echo "Test signal summary:
"
cat input_signal_summary.dat

else

echo "Run with the command:
run_process n
where n is the example number to run"

exit 1

fi

#gnuplot plot1.plt
gnuplot plot1jpg.plt

cp V.fft  ${NAME}.fft
cp V.favg ${NAME}.favg
cp input_signal_summary.dat ${NAME}.input_signal_summary.dat
cp GGI_TLM_post_process_in.txt ${NAME}.GGI_TLM_post_process_in.txt
cp dBuV_lin.jpg  ${NAME}.dBuV_lin.jpg
cp dBuV_log.jpg    ${NAME}.dBuV_log.jpg
cp input_signal.jpg    ${NAME}.input_signal.jpg
cp sub_sampled_signals.jpg  ${NAME}.sub_sampled_signals.jpg

exit 0
